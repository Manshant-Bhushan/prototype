.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "GDAL-VECTOR-GRID" "1" "Jul 12, 2025" "" "GDAL"
.SH NAME
gdal-vector-grid \- Create a regular grid from scattered points
.sp
Added in version 3.11.

.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.EX
Usage: gdal vector grid <SUBCOMMAND> [OPTIONS]
where <SUBCOMMAND> is one of:
  \- average:                 Create a regular grid from scattered points using moving average interpolation.
  \- average\-distance:        Create a regular grid from scattered points using the average distance between the grid node (center of the search ellipse) and all of the data points in the search ellipse.
  \- average\-distance\-points: Create a regular grid from scattered points using the average distance between the data points in the search ellipse.
  \- count:                   Create a regular grid from scattered points using the number of points in the search ellipse.
  \- invdist:                 Create a regular grid from scattered points using weighted inverse distance interpolation.
  \- invdistnn:               Create a regular grid from scattered points using weighted inverse distance interpolation nearest neighbour.
  \- linear:                  Create a regular grid from scattered points using linear/barycentric interpolation.
  \- maximum:                 Create a regular grid from scattered points using the maximum value in the search ellipse.
  \- minimum:                 Create a regular grid from scattered points using the minimum value in the search ellipse.
  \- nearest:                 Create a regular grid from scattered points using nearest neighbor interpolation.
  \- range:                   Create a regular grid from scattered points using the difference between the minimum and maximum values in the search ellipse.

Common Options:
  \-h, \-\-help              Display help message and exit
  \-\-json\-usage            Display usage as JSON document and exit
  \-\-config <KEY>=<VALUE>  Configuration option [may be repeated]
.EE
.UNINDENT
.UNINDENT
.SH DESCRIPTION
.sp
This program creates a regular grid (raster) from the scattered data read from
a vector dataset. Input data will be interpolated to fill grid nodes with
values, you can choose from various interpolation methods.
.sp
It is possible to set the \fI\%GDAL_NUM_THREADS\fP
configuration option to parallelize the processing. The value to specify is
the number of worker threads, or \fBALL_CPUS\fP to use all the cores/CPUs of the
computer.
.SH OPTIONS COMMON TO ALL ALGORITHMS
.SS Standard options
.INDENT 0.0
.TP
.B \-f, \-\-of, \-\-format, \-\-output\-format <OUTPUT\-FORMAT>
Which output vector format to use. Allowed values may be given by
\fBgdal \-\-formats | grep vector | grep rw | sort\fP
.UNINDENT
.INDENT 0.0
.TP
.B \-\-co <NAME>=<VALUE>
Many formats have one or more optional dataset creation options that can be
used to control particulars about the file created. For instance,
the GeoPackage driver supports creation options to control the version.
.sp
May be repeated.
.sp
The dataset creation options available vary by format driver, and some
simple formats have no creation options at all. A list of options
supported for a format can be listed with the
\fI\%\-\-formats\fP
command line option but the documentation for the format is the
definitive source of information on driver creation options.
See \fI\%Vector drivers\fP format
specific documentation for legal creation options for each format.
.sp
Note that dataset creation options are different from layer creation options.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-overwrite
Allow program to overwrite existing target file or dataset.
Otherwise, by default, \fBgdal\fP errors out if the target file or
dataset already exists.
.UNINDENT
.INDENT 0.0
.TP
.B \-l, \-\-layer, \-\-layer\-name <LAYER\-NAME>
Indicates the layer(s) from the datasource that will be used for input features.
May be specified multiple times
.UNINDENT
.INDENT 0.0
.TP
.B \-\-sql <SQL>|@<filename>
An SQL statement to be evaluated against the datasource to produce a virtual layer of features to be burned in.
The @filename syntax can be used to indicate that the content is in the pointed filename.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-extent <xmin>,<ymin>,<xmax>,<ymax>
Set georeferenced extents. The values must be expressed in georeferenced units.
If not specified, the extent of the output file will be the extent of the vector layers.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-resolution <xres>,<yres>
Set target resolution. The values must be expressed in georeferenced units.
Both must be positive values. Note that \fI\-\-resolution\fP cannot be used with \fI\-\-size\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-size <xsize>,<ysize>
Set output file size in pixels and lines. Note that \fI\-\-size\fP cannot be used with \fI\-\-resolution\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-ot, \-\-datatype, \-\-output\-data\-type <OUTPUT\-DATA\-TYPE>
Force the output bands to be of the indicated data type.
Defaults to \fBFloat64\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-crs <CRS>
Override the projection for the output file. If not specified, the projection of the input vector file will be used if available. When using this option, no reprojection of features from the CRS of the input vector to the specified CRS of the output raster, so use only this option to correct an invalid source CRS. The \fB<CRS>\fP may be any of the usual GDAL/OGR forms, complete WKT, PROJ.4, EPSG:n or a file containing the WKT.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-bbox <xmin>,<ymin>,<xmax>,<ymax>
Select only points contained within the specified bounding box.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-zfield <field_name>
Identifies an attribute field
on the features to be used to get a Z value from. This value overrides the Z value
read from the feature geometry record (naturally, if you have a Z value in
the geometry, otherwise you have no choice and should specify a field name
containing a Z value).
.UNINDENT
.INDENT 0.0
.TP
.B \-\-zincrease <increase_value>
Addition to the attribute field
on the features to be used to get a Z value from. The addition should be the same
unit as the Z value. The result value will be Z value + Z increase value. The default value is 0.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-zmultiply <multiply_value>
This is multiplication
ratio for the Z field. This can be used for a shift from e.g. feet to meters or from
elevation to depth. The result value will be (Z value + Z increase value) * Z multiply value.
The default value is 1.
.UNINDENT
.SS Advanced options
.INDENT 0.0
.TP
.B \-\-oo <NAME>=<VALUE>
Dataset open option (format specific).
.sp
May be repeated.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-if <format>
Format/driver name to be attempted to open the input file(s). It is generally
not necessary to specify it, but it can be used to skip automatic driver
detection, when it fails to select the appropriate driver.
This option can be repeated several times to specify several candidate drivers.
Note that it does not force those drivers to open the dataset. In particular,
some drivers have requirements on file extensions.
.sp
May be repeated.
.UNINDENT
.SH "INVDIST" ALGORITHM
.sp
Interpolation using an inverse distance to a power.
.sp
When \fI\%\-\-min\-points\-per\-quadrant\fP or \fI\%\-\-max\-points\-per\-quadrant\fP
is specified, the actual algorithm used is \(dqinvdistnn\(dq.
.SS Options
.INDENT 0.0
.TP
.B \-\-power <val>
Weighting power (default 2.0).
.UNINDENT
.INDENT 0.0
.TP
.B \-\-smoothing <val>
Smoothing parameter (default 0.0).
.UNINDENT
.INDENT 0.0
.TP
.B \-\-radius <val>
Set first and second radius (mutually exclusive with \fI\%\-\-radius1\fP and \fI\%\-\-radius2\fP\&.
By default, uses the whole point array.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-radius1 <val>
The first radius (X axis if rotation angle is 0) of the search ellipse.
By default, uses the whole point array.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-radius2 <val>
The second radius (Y axis if rotation angle is 0) of the search ellipse.
By default, uses the whole point array.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-angle <val>
Angle of search ellipse rotation in degrees (counter clockwise, default is 0).
.UNINDENT
.INDENT 0.0
.TP
.B \-\-max\-points <val>
Maximum number of data points to use. Do not search for more points than this number.
This may only used if the search ellipse is set (both radii are non\-zero).
By default, no limitation.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-min\-points <val>
Minimum number of data points to use. If less points in the search ellipse
than the specified value are found, the grid node considered empty and will
be filled with the nodata value.
This may only used if the search ellipse is set (both radii are non\-zero).
By default, no limitation.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-max\-points\-per\-quadrant <val>
Maximum number of data points to use per quadrant.
By default, no limitation.
When specified, the algorithm will only take into account up to max_points_per_quadrant
points for each of the right\-top, left\-top, right\-bottom and right\-top quadrant
relative to the point being interpolated.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-min\-points\-per\-quadrant <val>
Minimum number of data points to use per quadrant.
By default, no limitation.
When specified, the algorithm will collect at least min_points_per_quadrant
points for each of the right\-top, left\-top, right\-bottom and right\-top quadrant
relative to the point being interpolated.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-nodata <val>
Nodata value to fill empty points (default is 0).
.UNINDENT
.SH "INVDISTNN" ALGORITHM
.sp
Interpolation using an inverse distance to a power with nearest neighbor
searching, ideal when \fI\%\-\-max\-points\fP is used.
.sp
When \fI\%\-\-min\-points\-per\-quadrant\fP or \fI\%\-\-max\-points\-per\-quadrant\fP is specified, the
search will start with the closest point to the point being interpolated
from the first quadrant, then the closest point to the point being interpolated
from the second quadrant, etc. up to the 4th quadrant, and will continue with
the next closest point in the first quadrant, etc. until \fI\%\-\-max\-points\fP and/or
\fI\%\-\-max\-points\-per\-quadrant\fP thresholds are reached.
.SS Required option
.INDENT 0.0
.TP
.B \-\-radius <val>
Set search radius (mutually exclusive with \fI\%\-\-radius1\fP and \fI\%\-\-radius2\fP\&.
Required.
.UNINDENT
.SS Options
.INDENT 0.0
.TP
.B \-\-power <val>
Weighting power (default 2.0).
.UNINDENT
.INDENT 0.0
.TP
.B \-\-smoothing <val>
Smoothing parameter (default 0.0).
.UNINDENT
.INDENT 0.0
.TP
.B \-\-max\-points <val>
Maximum number of data points to use. Do not search for more points than this number.
This may only used if the search ellipse is set (both radii are non\-zero).
By default, no limitation.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-min\-points <val>
Minimum number of data points to use. If less points in the search ellipse
than the specified value are found, the grid node considered empty and will
be filled with the nodata value.
This may only used if the search ellipse is set (both radii are non\-zero).
By default, no limitation.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-max\-points\-per\-quadrant <val>
Maximum number of data points to use per quadrant.
By default, no limitation.
When specified, the algorithm will only take into account up to max_points_per_quadrant
points for each of the right\-top, left\-top, right\-bottom and right\-top quadrant
relative to the point being interpolated.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-min\-points\-per\-quadrant <val>
Minimum number of data points to use per quadrant.
By default, no limitation.
When specified, the algorithm will collect at least min_points_per_quadrant
points for each of the right\-top, left\-top, right\-bottom and right\-top quadrant
relative to the point being interpolated.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-nodata <val>
Nodata value to fill empty points (default is 0).
.UNINDENT
.SH "AVERAGE" ALGORITHM
.sp
Interpolation using a moving average algorithm.
.sp
When \fI\%\-\-min\-points\-per\-quadrant\fP or \fI\%\-\-max\-points\-per\-quadrant\fP is specified, the
search will start with the closest point to the point being interpolated
from the first quadrant, then the closest point to the point being interpolated
from the second quadrant, etc. up to the 4th quadrant, and will continue with
the next closest point in the first quadrant, etc. until \fI\%\-\-max\-points\fP and/or
\fI\%\-\-max\-points\-per\-quadrant\fP thresholds are reached.
.SS Options
.INDENT 0.0
.TP
.B \-\-radius <val>
Set first and second radius (mutually exclusive with \fI\%\-\-radius1\fP and \fI\%\-\-radius2\fP\&.
By default, uses the whole point array.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-radius1 <val>
The first radius (X axis if rotation angle is 0) of the search ellipse.
By default, uses the whole point array.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-radius2 <val>
The second radius (Y axis if rotation angle is 0) of the search ellipse.
By default, uses the whole point array.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-angle <val>
Angle of search ellipse rotation in degrees (counter clockwise, default is 0).
.UNINDENT
.INDENT 0.0
.TP
.B \-\-max\-points <val>
Maximum number of data points to use. Do not search for more points than this number.
This may only used if the search ellipse is set (both radii are non\-zero).
By default, no limitation.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-min\-points <val>
Minimum number of data points to use. If less points in the search ellipse
than the specified value are found, the grid node considered empty and will
be filled with the nodata value.
This may only used if the search ellipse is set (both radii are non\-zero).
By default, no limitation.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-max\-points\-per\-quadrant <val>
Maximum number of data points to use per quadrant.
By default, no limitation.
When specified, the algorithm will only take into account up to max_points_per_quadrant
points for each of the right\-top, left\-top, right\-bottom and right\-top quadrant
relative to the point being interpolated.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-min\-points\-per\-quadrant <val>
Minimum number of data points to use per quadrant.
By default, no limitation.
When specified, the algorithm will collect at least min_points_per_quadrant
points for each of the right\-top, left\-top, right\-bottom and right\-top quadrant
relative to the point being interpolated.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-nodata <val>
Nodata value to fill empty points (default is 0).
.UNINDENT
.SH "NEAREST" ALGORITHM
.sp
Interpolation using nearest neighbor algorithm.
.SS Options
.INDENT 0.0
.TP
.B \-\-radius <val>
Set first and second radius (mutually exclusive with \fI\%\-\-radius1\fP and \fI\%\-\-radius2\fP\&.
By default, uses the whole point array.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-radius1 <val>
The first radius (X axis if rotation angle is 0) of the search ellipse.
By default, uses the whole point array.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-radius2 <val>
The second radius (Y axis if rotation angle is 0) of the search ellipse.
By default, uses the whole point array.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-angle <val>
Angle of search ellipse rotation in degrees (counter clockwise, default is 0).
.UNINDENT
.INDENT 0.0
.TP
.B \-\-nodata <val>
Nodata value to fill empty points (default is 0).
.UNINDENT
.SH "LINEAR" ALGORITHM
.sp
Linear interpolation by computing a Delaunay triangulation of the point cloud,
finding in which triangle of the triangulation the point is, and by doing
linear interpolation from its barycentric coordinates
within the triangle.
If the point is not in any triangle, depending on the radius, the
algorithm will use the value of the nearest point or the nodata value.
.SS Options
.INDENT 0.0
.TP
.B \-\-radius <val>
In case the point to be interpolated does not fit into a triangle of the
Delaunay triangulation, use that maximum distance to search a nearest
neighbour, or use nodata otherwise.
If unset, the search distance is infinite.
If set to 0, nodata value will be always used.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-nodata <val>
Nodata value to fill empty points (default is 0).
.UNINDENT
.SH DATA METRICS ALGORITHMS
.sp
Besides the interpolation functionality \fBgdal vector grid\fP can be used to compute
some data metrics using the specified window and output grid geometry. These
metrics are:
.INDENT 0.0
.IP \(bu 2
\fBminimum\fP: Minimum value found in grid node search ellipse.
.IP \(bu 2
\fBmaximum\fP: Maximum value found in grid node search ellipse.
.IP \(bu 2
\fBrange\fP: A difference between the minimum and maximum values
found in grid node search ellipse.
.IP \(bu 2
\fBcount\fP:  A number of data points found in grid node search ellipse.
.IP \(bu 2
\fBaverage\-distance\fP: An average distance between the grid
node (center of the search ellipse) and all of the data points found in grid
node search ellipse.
.IP \(bu 2
\fBaverage\-distance\-points\fP: An average distance between the data
points found in grid node search ellipse. The distance between each pair of
points within ellipse is calculated and average of all distances is set as a
grid node value.
.UNINDENT
.sp
All the metrics have the same set of options:
.INDENT 0.0
.TP
.B \-\-radius <val>
Set first and second radius (mutually exclusive with \fI\%\-\-radius1\fP and \fI\%\-\-radius2\fP\&.
By default, uses the whole point array.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-radius1 <val>
The first radius (X axis if rotation angle is 0) of the search ellipse.
By default, uses the whole point array.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-radius2 <val>
The second radius (Y axis if rotation angle is 0) of the search ellipse.
By default, uses the whole point array.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-angle <val>
Angle of search ellipse rotation in degrees (counter clockwise, default is 0).
.UNINDENT
.INDENT 0.0
.TP
.B \-\-min\-points <val>
Minimum number of data points to use. If less points in the search ellipse
than the specified value are found, the grid node considered empty and will
be filled with the nodata value.
This may only used if the search ellipse is set (both radii are non\-zero).
By default, no limitation.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-max\-points\-per\-quadrant <val>
Maximum number of data points to use per quadrant.
By default, no limitation.
When specified, the algorithm will only take into account up to max_points_per_quadrant
points for each of the right\-top, left\-top, right\-bottom and right\-top quadrant
relative to the point being interpolated.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-min\-points\-per\-quadrant <val>
Minimum number of data points to use per quadrant.
By default, no limitation.
If that number is not reached, the point being interpolated will be set with
the nodata value.
When specified, the algorithm will collect at least min_points_per_quadrant
points for each of the right\-top, left\-top, right\-bottom and right\-top quadrant
relative to the point being interpolated.
.UNINDENT
.INDENT 0.0
.TP
.B \-\-nodata <val>
Nodata value to fill empty points (default is 0).
.UNINDENT
.sp
When \fI\%\-\-min\-points\-per\-quadrant\fP or \fI\%\-\-max\-points\-per\-quadrant\fP is specified, the
search will start with the closest point to the point being interpolated
from the first quadrant, then the closest point to the point being interpolated
from the second quadrant, etc. up to the 4th quadrant, and will continue with
the next closest point in the first quadrant, etc. until \fI\%\-\-max\-points\fP and/or
\fI\%\-\-max\-points\-per\-quadrant\fP thresholds are reached.
.SH READING COMMA SEPARATED VALUES
.sp
Often you have a text file with a list of comma separated XYZ values to work
with (so called CSV file). You can easily use that kind of data source in
\fBgdal vector grid\fP\&. All you need is to create a virtual dataset header (VRT) for your CSV
file and use it as an input datasource for \fBgdal vector grid\fP\&. You can find details
on the VRT format on the \fI\%VRT \-\- Virtual Format\fP description page.
.sp
Here is a small example. Let\(aqs say we have a CSV file called \fIdem.csv\fP
containing
.INDENT 0.0
.INDENT 3.5
.sp
.EX
Easting,Northing,Elevation
86943.4,891957,139.13
87124.3,892075,135.01
86962.4,892321,182.04
87077.6,891995,135.01
\&...
.EE
.UNINDENT
.UNINDENT
.sp
For the above data we will create a \fIdem.vrt\fP header with the following
content:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
<OGRVRTDataSource>
    <OGRVRTLayer name=\(dqdem\(dq>
        <SrcDataSource>dem.csv</SrcDataSource>
        <GeometryType>wkbPoint</GeometryType>
        <GeometryField encoding=\(dqPointFromColumns\(dq x=\(dqEasting\(dq y=\(dqNorthing\(dq z=\(dqElevation\(dq/>
    </OGRVRTLayer>
</OGRVRTDataSource>
.EE
.UNINDENT
.UNINDENT
.sp
This description specifies so called 2.5D geometry with  three  coordinates
X,  Y and Z. The Z value will be used for interpolation. Now you can
use \fIdem.vrt\fP with all OGR programs (start  with  \fI\%ogrinfo\fP  to  test  that
everything works fine). The datasource will contain a single layer called
\fI\(dqdem\(dq\fP  filled  with point features constructed from values in the CSV file.
Using this technique you can handle CSV  files  with  more  than  three
columns, switch columns, etc. OK, now the final step:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
gdal vector grid invdist dem.vrt demv.tif
.EE
.UNINDENT
.UNINDENT
.sp
Or, if we do not wish to use a VRT file:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
gdal vector grid invdist \-l dem \-oo X_POSSIBLE_NAMES=Easting \e
\-oo Y_POSSIBLE_NAMES=Northing \-\-zfield=Elevation dem.csv dem.tif
.EE
.UNINDENT
.UNINDENT
.sp
If your CSV file does not contain column headers then it can be handled
in the VRT file in the following way:
.INDENT 0.0
.INDENT 3.5
.sp
.EX
<GeometryField encoding=\(dqPointFromColumns\(dq x=\(dqfield_1\(dq y=\(dqfield_2\(dq z=\(dqfield_3\(dq/>
.EE
.UNINDENT
.UNINDENT
.sp
The \fI\%Comma Separated Value (.csv)\fP description page contains details on CSV format supported by GDAL.
.SH EXAMPLES
.SS Example 1: Create a raster from a VRT datasource using inverse distance to a power
.INDENT 0.0
.INDENT 3.5
.sp
.EX
gdal vector grid invdist \-\-power=2.0 \-\-smoothing=1.0 \-\-extent=85000,894000,89000,890000 \e
    \-\-size=400,400 \-l dem dem.vrt dem.tif
.EE
.UNINDENT
.UNINDENT
.sp
This example creates a raster TIFF file from the VRT datasource described in
\fI\%Reading comma separated values\fP section using the inverse distance to a power method.
Values to interpolate will be read from Z value of geometry record.
.SS Example 2: Read values to interpolate from an attribute field
.INDENT 0.0
.INDENT 3.5
.sp
.EX
gdal vector grid invdist \-\-zfield=Elevation \-\-config GDAL_NUM_THREADS ALL_CPUS \e
    \-\-power=2.0 \-\-smoothing=1.0 \-\-extent=85000,894000,89000,890000 \e
    \-\-size=400,400 \-l dem dem.vrt dem.tif
.EE
.UNINDENT
.UNINDENT
.sp
This command does the same thing as the previous one, but reads values to
interpolate from the attribute field specified with \fI\%\-\-zfield\fP option
instead of geometry record. So in this case X and Y coordinates are being
taken from geometry and Z is being taken from the \fI\(dqElevation\(dq\fP field.
The \fI\%GDAL_NUM_THREADS\fP is also set to parallelize the computation.
.SH AUTHOR
Even Rouault <even.rouault@spatialys.com>
.SH COPYRIGHT
1998-2025
.\" Generated by docutils manpage writer.
.
